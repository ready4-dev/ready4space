% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suburb_based_effective_catchment.R
\name{suburb_based_effective_catchment}
\alias{suburb_based_effective_catchment}
\title{Create a simple features object based on suburbs from which cluster clients come from.}
\usage{

  suburb_based_effective_catchment(aus_state_suburbs_sf = ready.utils::data_get(data_lookup_tb
  = aus_spatial_lookup_tb, lookup_reference = "aus_ssc_nat_shp_bound_2016",
  lookup_variable = "name", target_variable = "source_reference"),
  client_locations_ref = NULL, year = 2018, cluster, state_names)
}
\arguments{
\item{aus_state_suburbs_sf}{PARAM_DESCRIPTION, Default: ready.utils::data_get(data_lookup_tb = aus_spatial_lookup_tb,
lookup_reference = "aus_ssc_nat_shp_bound_2016", lookup_variable = "name",
target_variable = "source_reference")}

\item{client_locations_ref}{PARAM_DESCRIPTION, Default: NULL}

\item{year}{PARAM_DESCRIPTION, Default: 2018}

\item{cluster}{PARAM_DESCRIPTION}

\item{state_names}{PARAM_DESCRIPTION}
}
\value{
OUTPUT_DESCRIPTION
}
\description{
FUNCTION_DESCRIPTION
}
\details{
DETAILS
}
\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
}
\seealso{
\code{\link[ready.utils]{data_get}}
 \code{\link[dplyr]{filter}},\code{\link[dplyr]{pull}},\code{\link[dplyr]{rowwise}},\code{\link[dplyr]{mutate}},\code{\link[dplyr]{group_by}},\code{\link[dplyr]{summarise}},\code{\link[dplyr]{select}},\code{\link[dplyr]{join}}
 \code{\link[base]{character}},\code{\link[base]{sets}}
 \code{\link[stringr]{str_sub}},\code{\link[stringr]{str_length}},\code{\link[stringr]{str_detect}},\code{\link[stringr]{str_order}}
 \code{\link[purrr]{map}}
}
