% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/travel_time_app_calc.R
\name{travel_time_app_calc}
\alias{travel_time_app_calc}
\alias{convert_tt_polygon_to_sf}
\title{Create isochrones around an origin using the Travel Time App}
\usage{
travel_time_app_calc(appID, apiKey, origin,
  mode_of_transport = "driving", travel_time_hours, crs)

convert_tt_polygon_to_sf(tt_polyline, mode_of_transport, travel_time_hours,
  crs)
}
\arguments{
\item{appID}{PARAM_DESCRIPTION}

\item{apiKey}{PARAM_DESCRIPTION}

\item{origin}{PARAM_DESCRIPTION}

\item{mode_of_transport}{PARAM_DESCRIPTION, Default: 'driving'}

\item{travel_time_hours}{PARAM_DESCRIPTION}

\item{crs}{PARAM_DESCRIPTION}

\item{tt_polyline}{PARAM_DESCRIPTION}
}
\value{
OUTPUT_DESCRIPTION
}
\description{
FUNCTION_DESCRIPTION
}
\details{
## Implements: https://stackoverflow.com/questions/40489162/draw-time-radius-around-lat-long-on-map
}
\section{Functions}{
\itemize{
\item \code{convert_tt_polygon_to_sf}: Calculates the .....
}}

\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
}
\seealso{
\code{\link[httr]{POST}},\code{\link[httr]{add_headers}}
 \code{\link[jsonlite]{toJSON, fromJSON}}
 \code{\link[googleway]{encode_pl}}
 \code{\link[dplyr]{pull}}
 \code{\link[purrr]{map}},\code{\link[purrr]{reduce}}
}
